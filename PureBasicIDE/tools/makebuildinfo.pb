;--------------------------------------------------------------------------------------------
;  Copyright (c) Fantaise Software. All rights reserved.
;  Dual licensed under the GPL and Fantaisie Software licenses.
;  See LICENSE and LICENSE-FANTAISIE in the project root for license information.
;--------------------------------------------------------------------------------------------



;
; Gather some build information to include in the IDE About box (for better debugging)
; Crossplatform
;

CompilerIf #PB_Compiler_OS = #PB_OS_Windows
  #Compiler    = "Compilers/PBCompiler.exe"
  #VersionFlag = "/VERSION"
  #Subversion  = "svn.exe"
CompilerElse
  #Compiler    = "/compilers/pbcompiler"
  #VersionFlag = "--version"
  #Subversion  = "svn"
CompilerEndIf

Global SvnBranch$, SvnRevision$

OpenConsole()

Procedure GetSvnInfo()
  
  svn = RunProgram(#Subversion, "info . --xml", GetCurrentDirectory(), #PB_Program_Open|#PB_Program_Read|#PB_Program_Hide|#PB_Program_Ascii)
  If svn
    Info$ = ""
    While ProgramRunning(svn)
      Info$ + ReadProgramString(svn) + Chr(13) + Chr(10)
    Wend  
    CloseProgram(svn)
    
    ; works in ascii only
    If ParseXML(0, Info$) And XMLStatus(0) = #PB_XML_Success
      *Entry = XMLNodeFromPath(RootXMLNode(0), "/info/entry")
      If *Entry
        SvnRevision$ = GetXMLAttribute(*Entry, "revision")
      EndIf    
      
      *Entry = XMLNodeFromPath(RootXMLNode(0), "/info/entry/url")
      If *Entry
        Url$ = GetXMLNodeText(*Entry)
        If Left(Url$, 38) = "svn://svn.purebasic.fr/home/svn/Fr34k/"
          SvnBranch$ = StringField(Right(Url$, Len(Url$)-38), 1, "/")
          
        ElseIf Left(Url$, 35) = "svn://192.168.0.100/home/svn/Fr34k/" ; For a strange reason, my build PC doesn't resolve svn.purebasic.fr correctly anymore, so I use local IP
          SvnBranch$ = StringField(Right(Url$, Len(Url$)-35), 1, "/")
        EndIf
      EndIf
      
      FreeXML(0)
    EndIf
  Else
    PrintN("makebuildinfo - svn executable not found.")
    End 1 ; failure
  EndIf
  
EndProcedure

Procedure.s GetCompilerVersion()
  Version$ = ""

  Compiler$ = GetEnvironmentVariable("PUREBASIC_HOME")
  If Right(Compiler$, 1) <> "/"
    Compiler$ + "/"
  EndIf
  Compiler$ + #Compiler
  
  compiler = RunProgram(Compiler$, #VersionFlag, "", #PB_Program_Open|#PB_Program_Read|#PB_Program_Hide)
  If compiler
    Version$ = ReadProgramString(compiler)
    
    ; purge any remaining output
    While ProgramRunning(compiler)
      ReadProgramString(compiler)
    Wend
    CloseProgram(compiler)
  EndIf  
  
  ; Cut the copyright notice
  Version$ = StringField(Version$, 1, ")") + ")"

  ProcedureReturn Version$
EndProcedure

;- Start
;
BuildDirectory$ = ProgramParameter()
If Right(BuildDirectory$, 1) <> "/"
  BuildDirectory$ + "/"
EndIf

GetSvnInfo()
Compiler$ = GetCompilerVersion()
Version$ = Trim(StringField(Compiler$, 1, "(")) ; remove "(Windows - x86)"
Version$ = Right(Version$, Len(Version$) - 10)  ; remove "PureBasic "

;- Write output
;
If CreateFile(0, BuildDirectory$+"BuildInfo.pb")
  WriteStringN(0, "; Autogenerated by makebuildinfo.pb")
  WriteStringN(0, ";")
  
  WriteStringN(0, "#BUILDINFO_Branch   = "+Chr(34)+SvnBranch$+Chr(34))  
  WriteStringN(0, "#BUILDINFO_Revision = "+Chr(34)+SvnRevision$+Chr(34))
  WriteStringN(0, "#BUILDINFO_Compiler = "+Chr(34)+Compiler$+Chr(34)) 
  WriteStringN(0, "#BUILDINFO_Version  = "+Chr(34)+Version$+Chr(34))
  WriteStringN(0, "#BUILDINFO_User     = "+Chr(34)+UserName()+Chr(34))
  
  CloseFile(0)
  End 0 ; success
  
Else
  PrintN("makebuildinfo - could not write output file!")
  End 1 ; failure
  
EndIf


  